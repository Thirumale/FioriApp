<mvc:View controllerName="BasicFiori-Routing.controller.Material" xmlns:mvc="sap.ui.core.mvc" xmlns:core="sap.ui.core" xmlns="sap.m"
	xmlns:semantic="sap.m.semantic">
	<semantic:MasterPage id="page" title="{masterView>/title}" navButtonPress="onNavBack" showNavButton="true">
		<semantic:subHeader>
			<Bar id="headerBar">
				<contentMiddle>
					<HBox class="searchWithButtons">
						<SearchField id="searchField" showRefreshButton="{= !${device>/support/touch} }" tooltip="{i18n>masterSearchTooltip}" width="100%"
							liveChange="onSearch"></SearchField>
						<Button id="scanner" icon="sap-icon://bar-code" press="scanMaterial"/>
					</HBox>
				</contentMiddle>
			</Bar>
		</semantic:subHeader>
		<semantic:content>
			<PullToRefresh id="pullToRefresh" visible="{device>/support/touch}" refresh="onRefresh"/>
			<!-- For client side filtering add this to the items attribute:  parameters: {operationMode: 'Client'}}" -->
			<List id="list"
				items="{ path: 'MaterialModel>/results', sorter: { path: 'MaterialModel>Material', descending: true }, groupHeaderFactory: '.createGroupHeader' }"
				busyIndicatorDelay="{masterView>/delay}" noDataText="{masterView>/noDataText}"
				mode="{=${device>/support/touch} ? 'None' : 'SingleSelectMaster'}" growing="true" growingScrollToLoad="true"
				updateFinished="onUpdateFinished" selectionChange="onSelectionChange">
				<infoToolbar>
					<Toolbar active="true" id="filterBar" visible="{masterView>/isFilterBarVisible}" press="onOpenViewSettings">
						<Title id="filterBarLabel" text="{masterView>/filterBarLabel}"/>
					</Toolbar>
				</infoToolbar>
				<items>
					<ObjectListItem type="{=${device>/system/phone} ? 'Active' : 'Inactive'}" press="onSelectionChange" title="{MaterialModel>Description}"
						number="{ path: 'MaterialModel>Price', formatter: '.formatter.currencyValue' }" numberUnit="{MaterialModel>Unit}">
						<ObjectAttribute title="Material ID" text="{MaterialModel>Material}"/>
						<ObjectAttribute title="Type" text="{MaterialModel>Type}"/>
					</ObjectListItem>
				</items>
			</List>
		</semantic:content>
		<semantic:customFooterContent>
			<!--	<Button type="{ path: 'device>/connected', formatter: '.formatter.onlineFormaterType' }" id="online" text="{device>/connected}"/>-->
		</semantic:customFooterContent>
		<semantic:addAction>
			<semantic:AddAction press="onSemanticAddButtonPress"/>
		</semantic:addAction>
	</semantic:MasterPage>
</mvc:View>